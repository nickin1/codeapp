// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(cuid())
  email          String         @unique
  password       String
  firstName      String?
  lastName       String?
  phoneNumber    String?
  avatar         String?
  isAdmin        Boolean        @default(false)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  templates      CodeTemplate[]
  blogPosts      BlogPost[]
  comments       Comment[]
  Report         Report[]
}

model CodeTemplate {
  id          String     @id @default(cuid())
  title       String
  description String?
  code        String
  language    String
  tags        String
  authorId    String
  author      User       @relation(fields: [authorId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  blogPosts   BlogPost[]
}

model BlogPost {
  id        String         @id @default(cuid())
  title     String
  content   String
  tags      String
  authorId  String
  author    User           @relation(fields: [authorId], references: [id])
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  comments  Comment[]
  templates CodeTemplate[]
  Report    Report[]
}

model Comment {
  id               String   @id @default(cuid())
  content          String
  authorId         String
  author           User     @relation(fields: [authorId], references: [id])
  blogPostId       String
  blogPost         BlogPost @relation(fields: [blogPostId], references: [id])
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  Report           Report[]
  nextComment Comment[]
}

model Report {
  id         String    @id @default(cuid())
  reason     String
  reporterId String
  reporter   User      @relation(fields: [reporterId], references: [id])
  blogPostId String?
  blogPost   BlogPost? @relation(fields: [blogPostId], references: [id])
  commentId  String?
  comment    Comment?  @relation(fields: [commentId], references: [id])
  createdAt  DateTime  @default(now())
}

// used dev0 to generate part of schema